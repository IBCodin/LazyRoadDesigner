/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JDialogNewPart.java
 *
 * Created on 10-juil.-2011, 19:48:11
 */
package com.creadri.lazyroaddesigner;

import javax.swing.JOptionPane;

/**
 *
 * @author creadri
 */
public class JDialogNewPart extends javax.swing.JDialog {

    int repeatEvery;
    int layerheight;
    int layerwidth;

    /** Creates new form JDialogNewPart */
    public JDialogNewPart(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jlRepeatEvery = new javax.swing.JLabel();
        jtfRepeatEvery = new javax.swing.JTextField();
        jlWidth = new javax.swing.JLabel();
        jtfWidth = new javax.swing.JTextField();
        jlHeight = new javax.swing.JLabel();
        jtfHeight = new javax.swing.JTextField();
        jbCreate = new javax.swing.JButton();

        setTitle("Create Part");
        setLocationByPlatform(true);
        setName("createpart"); // NOI18N
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jlRepeatEvery.setLabelFor(jtfRepeatEvery);
        jlRepeatEvery.setText("Repeat Every: ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jlRepeatEvery, gridBagConstraints);

        jtfRepeatEvery.setText("1");
        jtfRepeatEvery.setMinimumSize(new java.awt.Dimension(100, 20));
        jtfRepeatEvery.setPreferredSize(new java.awt.Dimension(100, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jtfRepeatEvery, gridBagConstraints);

        jlWidth.setText("Width");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jlWidth, gridBagConstraints);

        jtfWidth.setText("5");
        jtfWidth.setMinimumSize(new java.awt.Dimension(100, 20));
        jtfWidth.setPreferredSize(new java.awt.Dimension(100, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jtfWidth, gridBagConstraints);

        jlHeight.setText("Height");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jlHeight, gridBagConstraints);

        jtfHeight.setText("5");
        jtfHeight.setMinimumSize(new java.awt.Dimension(100, 20));
        jtfHeight.setPreferredSize(new java.awt.Dimension(100, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jtfHeight, gridBagConstraints);

        jbCreate.setText("Create");
        jbCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCreateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jbCreate, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public int getLayerheight() {
        return layerheight;
    }

    public int getLayerwidth() {
        return layerwidth;
    }

    public int getRepeatEvery() {
        return repeatEvery;
    }

    public void setLayerheight(int layerheight) {
        this.layerheight = layerheight;
        this.jtfHeight.setText(Integer.toString(layerheight));
    }

    public void setLayerwidth(int layerwidth) {
        this.layerwidth = layerwidth;
        this.jtfWidth.setText(Integer.toString(layerwidth));
    }

    public void setRepeatEvery(int repeatEvery) {
        this.repeatEvery = repeatEvery;
        this.jtfRepeatEvery.setText(Integer.toString(repeatEvery));
    }
    
    private void jbCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCreateActionPerformed
        try {
            repeatEvery = Integer.parseInt(jtfRepeatEvery.getText());
            layerheight = Integer.parseInt(jtfHeight.getText());
            layerwidth = Integer.parseInt(jtfWidth.getText());
            
            if (repeatEvery <= 0 || layerheight <= 0 || layerwidth <= 0) {
                repeatEvery = 0;
                JOptionPane.showMessageDialog(this, "Values must be superior to zero !", "Values Error", JOptionPane.ERROR_MESSAGE);
                
                return;
            }
            
        } catch (NumberFormatException ex) {
            repeatEvery = 1;
            layerheight = 1;
            layerwidth = 1;
        }
        
        this.setVisible(false);
    }//GEN-LAST:event_jbCreateActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbCreate;
    private javax.swing.JLabel jlHeight;
    private javax.swing.JLabel jlRepeatEvery;
    private javax.swing.JLabel jlWidth;
    private javax.swing.JTextField jtfHeight;
    private javax.swing.JTextField jtfRepeatEvery;
    private javax.swing.JTextField jtfWidth;
    // End of variables declaration//GEN-END:variables
}
